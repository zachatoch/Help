#include <stdio.h>
#include <stdlib.h>
#include <cs50.h>
#include "bmp.h"

int main(int argc, char *argv[])
{
    char* names[50] = {"000.jpg","001.jpg","002.jpg","003.jpg","004.jpg","005.jpg","006.jpg","007.jpg","008.jpg","009.jpg","010.jpg","011.jpg","012.jpg","013.jpg","014.jpg","015.jpg","016.jpg","017.jpg","018.jpg","019.jpg","020.jpg","021.jpg","022.jpg","023.jpg","024.jpg","025.jpg","026.jpg","027.jpg","028.jpg","029.jpg","030.jpg","031.jpg","032.jpg","033.jpg","034.jpg","035.jpg","036.jpg","037.jpg","038.jpg","039.jpg","040.jpg","041.jpg","042.jpg","043.jpg","044.jpg","045.jpg","046.jpg","047.jpg","048.jpg","049.jpg"};
    int number = 22757;
    
    if(argc != 2)
    {
        fprintf(stderr, "Usage: ./recover image \n");
        return 1;    
    }
    //assigning and checking validity of file
    FILE *inptr = fopen(argv[1], "r");
    if (inptr == NULL)
    {
        fprintf(stderr, "Could not open file.\n");
        return 2;
    }
    
    //Skipping over the FAT
    //Iterating over 512 byte blocks
    
    int x = 0;
    bool endstop = true;
    for (int i = 0; i < number; i++)
    {
        FILE *outptr = fopen(names[x], "w");
        if(endstop == true)
        {
            //temporary memory
            BYTE bits[512]; 
                //reading block
            fread(&bits, 512, 1, inptr);
            //checking for Jpeg Signature
            if (bits[0] == 0xff && bits[1] == 0xd8 && bits[2] == 0xff)
            {
                 fwrite(&bits, sizeof(bits),1, outptr);
            }
            if (bits[511] != 0x00)
            {
                endstop = false;
            }
            else if (bits[511] == 0x00)
            {
                endstop = true;
                fclose(outptr);
                x++;
                printf("%i\n", x);
            }
        }
        else if (endstop == false)
        {
            //temporary memory
            BYTE bits[512]; 
                //reading block
            fread(&bits, 512, 1, inptr);
            //checking for Jpeg Signature
            fwrite(&bits, sizeof(bits),1, outptr);
            if (bits[511] != 0x00)
            {
                endstop = false;
            }
            else if (bits[511] == 0x00)
            {
                endstop = true;
                fclose(outptr);
                x++;
                printf("%i\n",x);
            }
        }
        
    }
    return 0;
    
    
}
