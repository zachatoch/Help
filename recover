#include <stdio.h>
#include <stdlib.h>
#include <cs50.h>
#include "bmp.h"

int main(int argc, char *argv[])
{
    char* names[50] = {"000","001","002","003","004","005","006","007","008","009","010","011","012","013","014","015","016","017","018","019","020","021","022","023","024","025","026","027","028","029","030","031","032","033","034","035","036","037","038","039","040","041","042","043","044","045","046","047","048","049"};
    int number = 22757;
    
    if(argc != 2)
    {
        fprintf(stderr, "Usage: ./recover image \n");
        return 1;    
    }
    //assigning and checking validity of file
    FILE *inptr = fopen(argv[1], "r");
    if (inptr == NULL)
    {
        fprintf(stderr, "Could not open file.\n");
        return 2;
    }
    
    //Skipping over the FAT
    //Iterating over 512 byte blocks
    for (int i = 0; i < number; i++)
    {
        FILE *outptr = fopen(names[i], "w");
        //temporary memory
        BYTE bits[512]; 
        //reading block
        fread(&bits, 512, 1, inptr);
        //checking for Jpeg Signature
        if (bits[0] == 0xff && bits[1] == 0xd8 && bits[2] == 0xff)
        {
            
            fwrite(&bits, sizeof(bits),1, outptr);
        }
        if (bits[511] != 0x00)
        {
            fread(&bits, sizeof(bits), 1, inptr);
            fwrite(&bits, sizeof(bits),1, outptr);
        }
        if (bits[511] == 0x00)
        {
        }
    }
    return 0;
    
    
}
